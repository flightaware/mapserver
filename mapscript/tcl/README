Mapscript Tcl Interface

WHAT
It's a Tcl interface for Mapserver.  You can write Tcl scripts to generate
maps, read/write shapefiles, etc.

VERSION
Mapscript 1.4 is built for Mapserver 6.4 +

INSTALL
cmake is now used.

mkdir build
cd build
cmake ..


REQUIREMENTS
You must have Tcl (tcl.sourceforge.net), Swig (www.swig.org) and GD installed.  

The current mapscript.i Swig interface definition file is designed for
Swig 1.3 versions.  Newer versions of Swig may require mapscript.i changes.
You should have Tcl 8.5 or greater installed, as the Makefile normally builds
with the Tcl dynamic stubs library.  The most recent production release is 
recommended.  Additionally, you may want the Img Tcl extension to
support upcoming Mapserver images (PNG, JPG, etc.)  See the NOTES section
below for more information.


DOCS
Swig generated documentation, plus and additional doc page for Tcl coded 
helper functions are available as HTML.


EXAMPLES
See the ./examples directory.  

	shpinfo.tcl    - print rudimentary info about a shape file.


MAPSERVER WORKBENCH 
MapServer Workbench is a set of tools written in Tcl/Tk with the Mapscript/Tcl
extension, and is available separately.  The Workbench currently consists of:

	msappwiz.tcl    -wizard to create mapserver application mapfiles
	msedit.tcl	-tree-structured mapfile editor
	msexplorer.tcl	-view, zoom, and query mapfiles 
	msshapex.tcl	-view shapefile information and .dbf attributes

MapServer Workbench tools run under Unix or Windows.

For more information and to download MapServer Workbench:
	http://msworkbench.sourceforge.net
	http://sourceforge.net/projects/msworkbench/
	http://www.nyx.net/~tpoindex/gis


NOTES
e.g., the "SWIG_STUB_HACK"
Building Tcl extensions that are not dependent on a particular version of
Tcl is the preferred method.  Prior to Tcl 8.1, an extension had to be
linked against a version dependent Tcl libarary.  Extensions had to be
recompiled and relinked when newer versions of Tcl were installed.

Beginning with Tcl 8.1, the 'stub' library was introduced to facilitate 
version independent extensions.  The stub library is a table of pointers
to Tcl functions, that are initialized at run time, so extensions compiled
for one version of Tcl don't have to be recompiled.  A call to Tcl_InitStubs()
is required before using any Tcl function in an extension, and we link to
libtclstub8.3.a, instead of the entire Tcl library. 

Swig 1.1-883 doesn't initialize the stub table by calling Tcl_InitStubs(), so
we must do it ourselves.  Normally, we use the Swig directive '%init' to
include the call to Tcl_InitStubs.  However, we also prefer that the new
Mapscript commands reside in their own namespace, by using the Swig option
'-namespace'.  Unfortunately, Swig generates a call to Tcl_Eval() before
the %init code is included in the wrapped .c file.

We work around this problem for Mapscript by some crusty use of the
C preprocessor.  Just before the Tcl_Eval call in the wrapped .c file, Swig
also includes an bit of code that allows use the [incr Tcl] object system.  
The makefile passes command line C preprocessor defines to
subvert this bit of code for our use.  Thus, we are able to call the 
Tcl_InitStub function before Tcl_Eval is called.  See the Makefile 
macro "SWIG_STUB_HACK".


WHO
Tom Poindexter
tpoindex@nyx.net
http://www.nyx.net/~tpoindex/


